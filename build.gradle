buildscript {
    repositories {
        mavenCentral()
		maven {
			name = "MavenRepo"
			url = "https://repo.maven.apache.org/maven2"
		}
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'maven-publish'
apply plugin: 'curseforge'


group = 'tterrag.wailaplugins'
archivesBaseName = "WAILAPlugins"
version = "MC${minecraft_version}-${mod_version}-${System.getenv().BUILD_NUMBER}"

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = 'run'
    
    replace "@VERSION@", project.version
	replace "${toReplace}", "required-after:Forge@[${forge_version},);required-after:endercore@[${endercore_version},);required-after:Waila;"
    replaceIn "WailaPlugins.java"
}

repositories {
	maven {
        name 'Forge'
        url 'http://files.minecraftforge.net/maven'
    }
    maven { // ttCore
        name 'tterrag Repo'
        url "http://maven.tterrag.com/"
    }
	maven { // WAILA
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
	maven { // CCC/NEI (for WAILA)
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven { // Forestry
        name 'Player Maven'
        url "http://maven.ic2.player.to"
    }
    maven { // RCrops
        name 'TehNut Maven'
        url "http://tehnut.info/maven"
    }
}

dependencies {
    compile "com.enderio.core:EnderCore:${endercore_version}:dev"
	compile "mcp.mobius.waila:Waila:${WAILA_version}"
    compile "net.sengir.forestry:forestry_1.7.10:${forestry_version}:dev"
    compile "info.tehnut.resourcefulcrops:ResourcefulCrops:${rcrops_version}:deobf"
}



processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

jar {

}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task clearOld(type: Delete) {
    delete 'libs'
}

tasks.build.dependsOn sourceJar, deobfJar